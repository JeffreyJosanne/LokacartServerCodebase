buildscript {
    ext {
        springBootVersion = '1.2.1.RELEASE'
    }
    repositories {
        maven { url "https://repo.spring.io/libs-release" }
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'war'

war {
    baseName = 'webapp'
    version = '0.0.1'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-release" }
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
    	exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-web") {
    	exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-thymeleaf") {
    	exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-security") {
    	exclude module: "logback-classic"
    }
    compile("org.springframework.boot:spring-boot-starter-log4j")
    compile("com.h2database:h2")
    compile("mysql:mysql-connector-java")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.7'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
